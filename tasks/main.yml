---
- name: Ensure pmm-data container exists
  community.general.docker_container:
    comparisons:
      '*': ignore
    image: "{{ pmm_server_docker_image_name }}:{{ pmm_server_docker_image_version }}"
    name: pmm-data
    state: present
    volumes:
      - /srv
    command: /bin/true

- name: Ensure pmm-server container exists
  community.general.docker_container:
    env: "{{ pmm_server_docker_env }}"
    image: "{{ pmm_server_docker_image_name }}:{{ pmm_server_docker_image_version }}"
    name: pmm-server
    network_mode: "{{ pmm_server_network_mode }}"
    ports: "{{ pmm_server_ports }}"
    pull: "{{ pmm_server_docker_pull }}"
    restart_policy: "{{ pmm_server_restart_policy }}"
    state: "{{ pmm_server_container_state }}"
    volumes_from:
      - pmm-data

- name: Remove dangling docker image
  community.general.docker_prune:
    images: true
    images_filters:
      dangling: true

- name: Enable Grafana anonymous access
  community.docker.docker_container_exec:
    container: pmm-server
    command: >
      /bin/bash -c 'sed -i "/# enable anonymous access/!b;n;cenabled = true # Ansible edited" /etc/grafana/grafana.ini'
  changed_when: false
  when: pmm_server_anonymous_access

- name: Disable auth at nginx level
  community.docker.docker_container_exec:
    container: pmm-server
    command: >
      /bin/bash -c "sed -i 's/auth_request \/auth_request;/# auth disabled by Ansible/g' /etc/nginx/conf.d/pmm.conf"
  changed_when: false
  when: pmm_server_anonymous_access

- name: Restart pmm-server
  community.general.docker_container:
    name: pmm-server
    restart: true
  changed_when: false
  when: pmm_server_anonymous_access
